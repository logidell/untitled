//하나의 자바스크립트 파일에서 다른 자바스크립트의 내용을 사용하기 위한 방식
//자바스크립트는 원래 html을 지원하기 위해 개발된 언어기 때문에 html 문서 내에서
//<script></script>, <script src='파일경로'> 형태로 다른 자바스크립트 내용을 사용했다.
//자바스크립트가 발전하면서 자바스크립트를 단순히 웹에서만 사용하는 것이 아니게 되어 외부 자바스크립트 내용을
//사용하기 위한 방법이 여러가지로 개발됨.

// 현재 es6버전부터 export, import 지원.
// 자바스크립트 파일 하나하나를 모듈이라고 부른다.
// 하나의 모듈에는 하나의 export default 가 존재한다.

// export : 변수, 함수, 클래스를 다른 자바스크립트 파일에서 사용할 수 있도록 설정
//사용법 :
//export 함수명;
//export {함수명1, 함수명2, ...};
//export default


// import : 다른 자바스크립트 파일이 제공하는 변수, 함수, 클래스를 불러와서 사용하도록 설정
//사용법 :
//import{ 함수명1, 함수명2 ...} from 파일경로; // 일반 export로 지정된 것을 불러옴
//import 함수명 from 파일경로; //export default로 지정된 것을 불러옴




// node.js 가 es6 버전이 나오기 이전 모듈화 시스템을 사용하고 있었음.
// node.js 가 기본적으로 사용하던 방식이 CommonJS 방식의 모듈 시스템을 사용하고 있었음.
// es6 가 발표되며 import, exports를 지원하게 됨. 공식적으로 CommonJS 방식에 우선권이 있기 때문에
// import, exports 사용시에는 추가 작업이 필요하게 됨.
// 기본 방식 =  CommonJS 로 사용되며 es6 방식을 사용하려면 확장자 mjs로 바꿔 사용하거나 package.json 파일에
// type: module 을 추가해 설정해야 한다.
// html 문서 내에서 import 사용하고자 할 경우  <script type="module" > 을 사용해 해당 파일이 모듈을 사용하고
// 있다고 인식시켜줘야 한다.